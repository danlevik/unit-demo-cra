name: release

on:
  push:
    tags: "v*"

jobs:
  create-issue:
    name: create issue
    runs-on: ubuntu-latest

    steps:
      - name: checkout repo
        uses: actions/checkout@v3

      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: build changelog
        id: build_changelog
        uses: loopwerk/tag-changelog@v1
        with:
          token: ${{ secrets.GH_ACCESS_TOKEN }}

      - name: create issue
        id: create-issue
        uses: JasonEtco/create-an-issue@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
          AUTHOR: ${{ github.actor }}
          TAG: ${{ github.ref_name }}
          CHANGELOG: ${{ steps.build_changelog.outputs.changes }}
        with:
          update_existing: true
      - run: "echo Created issue number ${{ steps.create-issue.outputs.number }}"

      - name: install dependencies
        run: npm ci

      - name: run jest tests
        id: jest-test
        run: npm run test-ci:unit

      - name: log jest results
        uses: peter-evans/create-or-update-comment@v3
        if: always()
        with:
          issue-number: ${{ steps.create-issue.outputs.number }}
          body: ${{ join(steps.jest-test.outputs.*, '\n') }}

      - name: install playwright deps
        run: npx playwright install --with-deps

      - name: run e2e tests
        id: e2e-test
        run: npm run test-ci:e2e

      - name: log e2e results
        uses: peter-evans/create-or-update-comment@v3
        if: always()
        with:
          issue-number: ${{ steps.create-issue.outputs.number }}
          body: ${{ join(steps.e2e-test.outputs.*, '\n') }}

      - name: build project
        run: npm run build

      - name: deploy
        id: deploy
        run: |
          git remote set-url origin https://git:${{ secrets.GH_ACCESS_TOKEN }}@github.com/${{ github.repository }}.git
          npx gh-pages -d build -u 'github-actions-bot <support+actions@github.com>'
        env:
          GH_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: log deploy result
        if: always()
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ steps.create-issue.outputs.number }}
          body: ${{ join(steps.deploy.outputs.*, '\n') }}

      - name: close issue
        uses: peter-evans/close-issue@v3
        with:
          issue-number: ${{ steps.create-issue.outputs.number }}
          comment: succesful release
